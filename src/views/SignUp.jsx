
// // src/views/SignUp.jsx

// import { useEffect, useState } from "react";
// import { Link, useNavigate } from "react-router-dom";

// export function SignUp() {
//   // -----------------------------
//   // üìå State ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ü‡∏≠‡∏£‡πå‡∏°
//   // -----------------------------
//   const [fullName, setFullName] = useState("");     // First/Last name (‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
//   const [mobile, setMobile] = useState("");         // Mobile number
//   const [email, setEmail] = useState("");           // Email address
//   const [password, setPassword] = useState("");     // Password
//   const [showPw, setShowPw] = useState(false);      // toggle ‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô

//   // Target Groups (‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ 1‚Äì20)
//   const [ageFrom, setAgeFrom] = useState("");
//   const [ageTo, setAgeTo] = useState("");

//   // Checkbox ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢/‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç (‡∏à‡∏∞‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á user ‡∏Å‡∏î I Agree ‡πÉ‡∏ô modal)
//   const [agree, setAgree] = useState(false);

//   // -----------------------------
//   // üìå State ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•/‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
//   // -----------------------------
//   const [submitting, setSubmitting] = useState(false); // ‡∏Å‡∏±‡∏ô‡∏Å‡∏î‡∏ã‡πâ‡∏≥
//   const [successEmail, setSuccessEmail] = useState(""); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö success banner
//   const [bannerOpen, setBannerOpen] = useState(false);  // ‡πÅ‡∏™‡∏î‡∏á success banner

//   // Error ‡∏£‡∏≤‡∏¢‡∏ü‡∏¥‡∏•‡∏î‡πå
//   const [err, setErr] = useState({
//     fullName: "",
//     mobile: "",
//     email: "",
//     password: "",
//     age: "",
//     agree: "",
//     submit: "",
//   });

//   const navigate = useNavigate();

//   // -----------------------------
//   // üß© Modal: ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô Privacy & Terms (‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
//   // -----------------------------
//   const [showPolicy, setShowPolicy] = useState(false);

//   // ‡∏õ‡∏¥‡∏î modal ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏° ESC (quality-of-life)
//   useEffect(() => {
//     const onKey = (e) => e.key === "Escape" && setShowPolicy(false);
//     if (showPolicy) window.addEventListener("keydown", onKey);
//     return () => window.removeEventListener("keydown", onKey);
//   }, [showPolicy]);

//   // -----------------------------
//   // üîé ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢ validate
//   // -----------------------------
//   const validate = () => {
//     const next = { fullName: "", mobile: "", email: "", password: "", age: "", agree: "", submit: "" };

//     // ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
//     const nameTrim = fullName.trim();
//     if (!nameTrim) next.fullName = "Please enter your first and last name";

//     // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ (pattern ‡∏´‡∏•‡∏ß‡∏° ‡πÜ)
//     const mobileTrim = mobile.trim();
//     if (!mobileTrim) {
//       next.mobile = "Please enter your mobile number";
//     } else {
//       const mobileLike = /^[0-9+\-\s]{6,20}$/;
//       if (!mobileLike.test(mobileTrim)) next.mobile = "Please enter a valid mobile number";
//     }

//     // ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
//     const emailTrim = email.trim();
//     if (!emailTrim) {
//       next.email = "Please enter your email";
//     } else {
//       const emailLike = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
//       if (!emailLike.test(emailTrim)) next.email = "Please enter a valid email address";
//     }

//     // ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (>= 6)
//     if (!password) next.password = "Please enter your password";
//     else if (password.length < 6) next.password = "Password must be at least 6 characters";

//     // ‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ 1‚Äì20 ‡πÅ‡∏•‡∏∞ from ‚â§ to
//     const aFrom = Number(ageFrom);
//     const aTo = Number(ageTo);
//     if (!ageFrom || !ageTo) {
//       next.age = "Please fill in both age fields";
//     } else if (Number.isNaN(aFrom) || Number.isNaN(aTo)) {
//       next.age = "Please enter a number between 1 and 20 only";
//     } else if (aFrom < 1 || aFrom > 20 || aTo < 1 || aTo > 20) {
//       next.age = "Please enter a number between 1 and 20 only";
//     } else if (aFrom > aTo) {
//       next.age = "The starting age must be less than or equal to the ending age";
//     }

//     // ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡πä‡∏Å agree
//     if (!agree) next.agree = "You must agree to the Privacy Policy and Terms of Service";

//     setErr(next);
//     return Object.values(next).every((v) => v === "");
//   };

//   // -----------------------------
//   // üì® Submit Handler
//   // -----------------------------
//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     setBannerOpen(false);
//     setSuccessEmail("");
//     setErr((o) => ({ ...o, submit: "" }));

//     if (!validate()) return;

//     setSubmitting(true);
//     try {
//       // TODO: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
//       await new Promise((r) => setTimeout(r, 800)); // mock async

//       // ‡πÄ‡∏õ‡∏¥‡∏î success banner (‡πÉ‡∏ä‡πâ email ‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å)
//       setSuccessEmail(email.trim());
//       setBannerOpen(true);

//       // ‡∏à‡∏∞ redirect ‡∏Å‡πá‡πÑ‡∏î‡πâ:
//       // navigate("/", { replace: true });
//     } catch (e1) {
//       setErr((o) => ({ ...o, submit: "Sign up failed. Please try again." }));
//     } finally {
//       setSubmitting(false);
//     }
//   };

//   // -----------------------------
//   // üß† ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏° checkbox ‡πÉ‡∏´‡∏°‡πà:
//   // - ‡∏ñ‡πâ‡∏≤ user "‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ï‡∏¥‡πä‡∏Å" ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î modal (‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà setAgree)
//   // - ‡πÄ‡∏°‡∏∑‡πà‡∏≠ user ‡∏Å‡∏î I Agree ‡πÉ‡∏ô modal ‚Üí ‡∏Ñ‡πà‡∏≠‡∏¢ setAgree(true) + ‡∏õ‡∏¥‡∏î modal
//   // - ‡∏ñ‡πâ‡∏≤ user "‡πÄ‡∏≠‡∏≤‡∏ï‡∏¥‡πä‡∏Å‡∏≠‡∏≠‡∏Å" ‚Üí setAgree(false) ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
//   // -----------------------------
//   const onAgreeToggle = (e) => {
//     const wantToCheck = e.target.checked;
//     if (wantToCheck && !agree) {
//       // ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏ï‡∏¥‡πä‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î modal ‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô
//       setShowPolicy(true);
//       // ‡πÑ‡∏°‡πà setAgree ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡πà‡∏≤‡∏ô/‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÉ‡∏ô modal
//       return;
//     }
//     // ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏≠‡∏≤‡∏ï‡∏¥‡πä‡∏Å‡∏≠‡∏≠‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‚Üí ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡∏£‡∏á ‡πÜ
//     setAgree(wantToCheck);
//   };

//   const confirmAgreeFromModal = () => {
//     // user ‡∏Å‡∏î I Agree ‡πÉ‡∏ô modal ‚Üí auto-check ‡∏Å‡∏•‡πà‡∏≠‡∏á
//     setAgree(true);
//     setShowPolicy(false);
//   };

//   return (
//     <div className="min-h-[calc(100vh-8rem)] bg-[color:var(--background)] text-[color:var(--foreground)] flex items-start md:items-center justify-center px-4 py-8">
//       <div className="w-full max-w-md">

//         {/* ‚úÖ Success Banner (‡πÇ‡∏ó‡∏ô popover) */}
//         {bannerOpen && (
//           <div className="mb-4 rounded-md border border-[color:var(--border)] bg-[color:var(--popover)] text-[color:var(--popover-foreground)] px-4 py-3 shadow-sm">
//             <div className="font-semibold">Account created successfully</div>
//             <p className="text-sm mt-1">
//               We've sent a confirmation link to your registered email address: <strong>{successEmail}</strong>.
//             </p>
//             <p className="text-sm">Please check your inbox (and spam/junk folder) to verify your account.</p>
//             <p className="text-sm">If you don't receive the email within a few minutes, try signing up again or contact support.</p>
//             <button type="button" className="mt-2 text-sm underline hover:opacity-80" onClick={() => setBannerOpen(false)}>
//               Dismiss
//             </button>
//           </div>
//         )}

//         {/* üî≤ ‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° */}
//         <div className="border border-[color:var(--border)] rounded-[var(--radius)] bg-[color:var(--card)] shadow-sm">
//           <form onSubmit={handleSubmit} className="p-6 md:p-8" noValidate>
//             <h1 className="text-2xl md:text-3xl font-bold text-center mb-6">Create an account</h1>

//             {/* ---------------- Full Name ---------------- */}
//             <label htmlFor="fullName" className="block text-sm font-medium mb-2">First Name / Last Name</label>
//             <input
//               id="fullName"
//               name="name"
//               type="text"
//               autoComplete="name"
//               placeholder="e.g. Jane Doe"
//               value={fullName}
//               onChange={(e) => setFullName(e.target.value)}
//               aria-invalid={!!err.fullName}
//               className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
//                          text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
//                          focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
//               required
//             />
//             {err.fullName && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.fullName}</p>}

//             {/* ---------------- Mobile Number ---------------- */}
//             <label htmlFor="mobile" className="block text-sm font-medium mt-5 mb-2">Mobile number</label>
//             <input
//               id="mobile"
//               name="tel"
//               type="tel"
//               autoComplete="tel"
//               placeholder="e.g. +66 8x-xxx-xxxx"
//               value={mobile}
//               onChange={(e) => setMobile(e.target.value)}
//               aria-invalid={!!err.mobile}
//               className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
//                          text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
//                          focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
//               required
//             />
//             {err.mobile && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.mobile}</p>}

//             {/* ---------------- Email Address ---------------- */}
//             <label htmlFor="email" className="block text-sm font-medium mt-5 mb-2">Email address</label>
//             <input
//               id="email"
//               name="email"
//               type="email"
//               autoComplete="email"
//               placeholder="e.g. name@example.com"
//               value={email}
//               onChange={(e) => setEmail(e.target.value)}
//               aria-invalid={!!err.email}
//               className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
//                          text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
//                          focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
//               required
//             />
//             {err.email && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.email}</p>}

//             {/* ---------------- Password ---------------- */}
//             <label htmlFor="password" className="block text-sm font-medium mt-5 mb-2">Password</label>
//             <div className="relative">
//               <input
//                 id="password"
//                 name="new-password"
//                 type={showPw ? "text" : "password"}
//                 autoComplete="new-password"
//                 placeholder="Enter your password"
//                 value={password}
//                 onChange={(e) => setPassword(e.target.value)}
//                 minLength={6}
//                 aria-invalid={!!err.password}
//                 className="w-full h-11 pr-12 px-4 rounded-md border border-[color:var(--input)] bg-white
//                            text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
//                            focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
//                 required
//               />
//               <button
//                 type="button"
//                 className="absolute inset-y-0 right-2 my-auto text-sm px-2 rounded hover:opacity-80"
//                 onClick={() => setShowPw((s) => !s)}
//                 aria-label={showPw ? "Hide password" : "Show password"}
//               >
//                 {showPw ? "Hide" : "Show"}
//               </button>
//             </div>
//             {err.password && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.password}</p>}

//             {/* ---------------- Target Groups (Age range 1‚Äì20) ---------------- */}
//             <label className="block text-sm font-medium mt-5 mb-2">Target Groups (Age range)</label>
//             <div className="flex items-center gap-2">
//               <input
//                 id="ageFrom"
//                 name="age-from"
//                 type="number"
//                 inputMode="numeric"
//                 min={1}
//                 max={20}
//                 step={1}
//                 placeholder="From"
//                 value={ageFrom}
//                 onChange={(e) => setAgeFrom(e.target.value)}
//                 aria-invalid={!!err.age}
//                 className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
//                            text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
//                            focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
//                 required
//               />
//               <span className="text-[color:var(--muted-foreground)]">‚Äì</span>
//               <input
//                 id="ageTo"
//                 name="age-to"
//                 type="number"
//                 inputMode="numeric"
//                 min={1}
//                 max={20}
//                 step={1}
//                 placeholder="To"
//                 value={ageTo}
//                 onChange={(e) => setAgeTo(e.target.value)}
//                 aria-invalid={!!err.age}
//                 className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
//                            text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
//                            focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
//                 required
//               />
//             </div>
//             {err.age && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.age}</p>}
//             <p className="mt-1 text-xs text-[color:var(--muted-foreground)]">Allowed age range: 1‚Äì20 years old.</p>

//             {/* ---------------- Agree to Policy / Terms ---------------- */}
//             <div className="mt-5 flex items-start gap-2">
//               <input
//                 id="agree"
//                 type="checkbox"
//                 checked={agree}
//                 onChange={onAgreeToggle}  // ‚¨ÖÔ∏è ‡πÉ‡∏ä‡πâ handler ‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
//                 aria-invalid={!!err.agree}
//                 className="mt-1"
//                 required
//               />
//               <label htmlFor="agree" className="text-sm">
//                 I agree to the{" "}
//                 <button type="button" className="underline hover:opacity-80" onClick={() => setShowPolicy(true)}>
//                   Privacy Policy
//                 </button>{" "}
//                 and{" "}
//                 <button type="button" className="underline hover:opacity-80" onClick={() => setShowPolicy(true)}>
//                   Terms of Service
//                 </button>
//                 .
//               </label>
//             </div>
//             {err.agree && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.agree}</p>}

//             {/* ---------------- Submit Button ---------------- */}
//             <button
//               type="submit"
//               disabled={submitting}
//               className="mt-6 w-full h-11 rounded-md font-semibold
//                          bg-[color:var(--primary)] text-[color:var(--primary-foreground)]
//                          hover:opacity-90 disabled:opacity-60
//                          focus:outline-none focus-visible:ring-2
//                          focus-visible:ring-[color:var(--ring)] focus-visible:ring-offset-2"
//             >
//               {submitting ? "Creating..." : "Create Account"}
//             </button>

//             {/* Footer link */}
//             <div className="mt-5 text-center text-sm">
//               Already have an account?{" "}
//               <Link to="/signin" className="underline hover:opacity-90">Login</Link>
//             </div>

//             {/* Error ‡∏£‡∏∞‡∏î‡∏±‡∏ö submit */}
//             {err.submit && (
//               <p className="mt-3 text-sm text-[color:var(--destructive)] text-center" role="alert">
//                 {err.submit}
//               </p>
//             )}
//           </form>
//         </div>

//         {/* =================== MODAL (‡∏≠‡πà‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢) =================== */}
//         {showPolicy && (
//           <div
//             className="fixed inset-0 z-[999] flex items-center justify-center px-4"
//             role="dialog"
//             aria-modal="true"
//             aria-labelledby="policy-title"
//             onClick={(e) => {
//               // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏â‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î
//               if (e.target === e.currentTarget) setShowPolicy(false);
//             }}
//           >
//             {/* ‡∏â‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏°‡∏∑‡∏î‡∏ö‡∏≤‡∏á ‡πÜ */}
//             <div className="absolute inset-0 bg-black/40" />

//             {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡πÇ‡∏ó‡∏ô popover ‡∏ï‡∏≤‡∏°‡∏ò‡∏µ‡∏°) */}
//             <div className="relative w-full max-w-3xl max-h-[85vh] overflow-hidden rounded-[var(--radius)] border border-[color:var(--border)] bg-[color:var(--popover)] text-[color:var(--popover-foreground)] shadow-lg">
//               {/* Header */}
//               <div className="px-5 py-4 border-b border-[color:var(--border)] flex items-center justify-between">
//                 <h2 id="policy-title" className="text-lg font-semibold">Privacy Policy & Terms of Service</h2>
//                 <button type="button" className="text-sm underline hover:opacity-80" onClick={() => setShowPolicy(false)} aria-label="Close">
//                   Close
//                 </button>
//               </div>

//               {/* Scrollable content */}
//               <div className="px-5 py-4 overflow-y-auto max-h-[65vh] text-sm leading-6">
//                 <p className="mb-3">
//                   We value your privacy and security. By creating an account and using our services, you agree to the following policy and terms.
//                 </p>

//                 <h3 className="font-semibold mt-4 mb-2">Privacy Policy</h3>
//                 <ul className="list-disc pl-5 space-y-2">
//                   <li>
//                     We collect and use your personal information (e.g., name, contact details, shipping address, and payment info) to process orders, deliver products, prevent fraud, and improve your shopping experience.
//                   </li>
//                   <li>
//                     Your data is stored securely and is never sold. We may share it with trusted third-party providers only when necessary for payment processing, delivery, analytics, or customer support‚Äîsubject to appropriate safeguards.
//                   </li>
//                   <li>
//                     You may contact us to access, update, or request deletion of your personal data, subject to legal and operational requirements.
//                   </li>
//                 </ul>

//                 <h3 className="font-semibold mt-5 mb-2">Terms of Service</h3>
//                 <ul className="list-disc pl-5 space-y-2">
//                   <li>
//                     You agree to use the service lawfully and respectfully. Product availability, pricing, taxes, shipping fees, and delivery estimates are shown at checkout.
//                   </li>
//                   <li>
//                     Returns and refunds follow our return policy. We are not liable for indirect or consequential losses caused by delays, outages, or events beyond our control.
//                   </li>
//                   <li>
//                     By creating an account, you confirm that you are authorized to use the provided payment method and that all information is accurate and up to date.
//                   </li>
//                 </ul>

//                 <p className="mt-5">
//                   By selecting <strong>I agree</strong> on the sign-up form and creating an account, you acknowledge that you have read and accepted this Privacy Policy and these Terms of Service.
//                 </p>
//               </div>

//               {/* Footer */}
//               <div className="px-5 py-3 border-t border-[color:var(--border)] flex items-center justify-end gap-3">
//                 <button
//                   type="button"
//                   className="px-4 h-9 rounded-md border border-[color:var(--input)] hover:opacity-90"
//                   onClick={() => setShowPolicy(false)}
//                 >
//                   Close
//                 </button>
//                 <button
//                   type="button"
//                   className="px-4 h-9 rounded-md font-semibold bg-[color:var(--primary)] text-[color:var(--primary-foreground)] hover:opacity-90"
//                   onClick={confirmAgreeFromModal} // ‚¨ÖÔ∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÉ‡∏ô modal ‚Üí auto-check ‡∏Å‡∏•‡πà‡∏≠‡∏á
//                 >
//                   I Agree
//                 </button>
//               </div>
//             </div>
//           </div>
//         )}
//         {/* =================== /MODAL =================== */}
//       </div>
//     </div>
//   );
// }


// src/views/SignUp.jsx
// ‚úÖ Flow ‡πÉ‡∏´‡∏°‡πà: ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠ "Verify Email"
//    (‡πÑ‡∏°‡πà redirect ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ; ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏• ‡∏Ñ‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤ /verify-email redirect ‡πÑ‡∏õ /signin ‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ)
// ‚úÖ Named export, UI ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©, ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå/ TODO ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢, ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏µ‡∏à‡∏≤‡∏Å index.css
// ‚úÖ ‡∏ü‡∏¥‡∏•‡∏î‡πå: Full Name, Mobile, Email, Password, Target Groups (1‚Äì20; from ‚â§ to)
// ‚úÖ Checkbox + Modal: ‡∏Å‡∏î‡∏ï‡∏¥‡πä‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î modal ‡∏≠‡πà‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢ ‚Üí I Agree ‡πÉ‡∏ô modal ‚Üí auto-check

import { useEffect, useMemo, useState } from "react";
import { Link, useSearchParams } from "react-router-dom";

// ‚õ≥Ô∏è (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å) ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô API ‡∏à‡∏≤‡∏Å .env ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏à‡∏£‡∏¥‡∏á
const API_BASE = import.meta.env?.VITE_API_BASE_URL;

export function SignUp() {
  // -----------------------------
  // üìå State ‡∏ü‡∏≠‡∏£‡πå‡∏°
  // -----------------------------
  const [fullName, setFullName] = useState("");     // First/Last name (‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
  const [mobile, setMobile] = useState("");         // Mobile number
  const [email, setEmail] = useState("");           // Email address
  const [password, setPassword] = useState("");     // Password
  const [showPw, setShowPw] = useState(false);      // toggle ‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô

  // Target Groups (‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ 1‚Äì20)
  const [ageFrom, setAgeFrom] = useState("");
  const [ageTo, setAgeTo] = useState("");

  // Checkbox ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢/‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç (‡∏à‡∏∞‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á user ‡∏Å‡∏î I Agree ‡πÉ‡∏ô modal)
  const [agree, setAgree] = useState(false);

  // -----------------------------
  // üìå State ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞/‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
  // -----------------------------
  const [submitting, setSubmitting] = useState(false); // ‡∏Å‡∏±‡∏ô‡∏Å‡∏î‡∏ã‡πâ‡∏≥
  const [successEmail, setSuccessEmail] = useState(""); // ‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå
  const [bannerOpen, setBannerOpen] = useState(false);  // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå "‡πÑ‡∏õ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏µ‡πÄ‡∏°‡∏•"

  // Error ‡∏£‡∏≤‡∏¢‡∏ü‡∏¥‡∏•‡∏î‡πå
  const [err, setErr] = useState({
    fullName: "",
    mobile: "",
    email: "",
    password: "",
    age: "",
    agree: "",
    submit: "",
  });

  // -----------------------------
  // üß© Modal: ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô Privacy & Terms (‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
  // -----------------------------
  const [showPolicy, setShowPolicy] = useState(false);

  // ‡∏õ‡∏¥‡∏î modal ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏° ESC (quality-of-life)
  useEffect(() => {
    const onKey = (e) => e.key === "Escape" && setShowPolicy(false);
    if (showPolicy) window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [showPolicy]);

  // -----------------------------
  // üîé ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢ validate
  // -----------------------------
  const validate = () => {
    const next = { fullName: "", mobile: "", email: "", password: "", age: "", agree: "", submit: "" };

    // ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
    const nameTrim = fullName.trim();
    if (!nameTrim) next.fullName = "Please enter your first and last name";

    // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ (pattern ‡∏´‡∏•‡∏ß‡∏° ‡πÜ)
    const mobileTrim = mobile.trim();
    if (!mobileTrim) {
      next.mobile = "Please enter your mobile number";
    } else {
      const mobileLike = /^[0-9+\-\s]{6,20}$/;
      if (!mobileLike.test(mobileTrim)) next.mobile = "Please enter a valid mobile number";
    }

    // ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    const emailTrim = email.trim();
    if (!emailTrim) {
      next.email = "Please enter your email";
    } else {
      const emailLike = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailLike.test(emailTrim)) next.email = "Please enter a valid email address";
    }

    // ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (>= 6)
    if (!password) next.password = "Please enter your password";
    else if (password.length < 6) next.password = "Password must be at least 6 characters";

    // ‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ 1‚Äì20 ‡πÅ‡∏•‡∏∞ from ‚â§ to
    const aFrom = Number(ageFrom);
    const aTo = Number(ageTo);
    if (!ageFrom || !ageTo) {
      next.age = "Please fill in both age fields";
    } else if (Number.isNaN(aFrom) || Number.isNaN(aTo)) {
      next.age = "Please enter a number between 1 and 20 only";
    } else if (aFrom < 1 || aFrom > 20 || aTo < 1 || aTo > 20) {
      next.age = "Please enter a number between 1 and 20 only";
    } else if (aFrom > aTo) {
      next.age = "The starting age must be less than or equal to the ending age";
    }

    // ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡πä‡∏Å agree
    if (!agree) next.agree = "You must agree to the Privacy Policy and Terms of Service";

    setErr(next);
    return Object.values(next).every((v) => v === "");
  };

  // -----------------------------
  // üß† ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏° checkbox:
  // - ‡∏ñ‡πâ‡∏≤‡∏ï‡∏¥‡πä‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î modal (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà setAgree)
  // - ‡∏Å‡∏î I Agree ‡πÉ‡∏ô modal ‚Üí setAgree(true) + ‡∏õ‡∏¥‡∏î modal
  // - ‡πÄ‡∏≠‡∏≤‡∏ï‡∏¥‡πä‡∏Å‡∏≠‡∏≠‡∏Å ‚Üí setAgree(false)
  // -----------------------------
  const onAgreeToggle = (e) => {
    const wantToCheck = e.target.checked;
    if (wantToCheck && !agree) {
      setShowPolicy(true);
      return;
    }
    setAgree(wantToCheck);
  };

  const confirmAgreeFromModal = () => {
    setAgree(true);
    setShowPolicy(false);
  };

  // -----------------------------
  // üì® Submit Handler
  // -----------------------------
  const handleSubmit = async (e) => {
    e.preventDefault();
    setBannerOpen(false);
    setSuccessEmail("");
    setErr((o) => ({ ...o, submit: "" }));

    if (!validate()) return;

    setSubmitting(true);

    // ‚úÖ ‡∏Å‡∏±‡∏ô‡πÅ‡∏Æ‡∏á: ‡∏ï‡∏±‡πâ‡∏á timeout ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏Ç‡∏≠ (12 ‡∏ß‡∏¥)
    const ac = new AbortController();
    const timeoutId = setTimeout(() => ac.abort(), 12000);

    try {
      // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á payload ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ backend
      const payload = {
        fullName: fullName.trim(),
        mobile: mobile.trim(),
        email: email.trim(),
        password,                        // ‡πÑ‡∏°‡πà trim ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        targetAge: { from: Number(ageFrom), to: Number(ageTo) },
        agreeToPolicy: agree,
      };

      // =======================
      // TODO: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
      // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á fetch (‡∏õ‡∏•‡∏î‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°):
      //
      // const res = await fetch(`${API_BASE}/auth/signup`, {
      //   method: "POST",
      //   headers: { "Content-Type": "application/json" },
      //   body: JSON.stringify(payload),
      //   signal: ac.signal,
      //   credentials: "include", // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ cookie/CSRF
      // });
      //
      // clearTimeout(timeoutId);
      //
      // if (!res.ok) {
      //   if (res.status === 409) {
      //     setErr((o) => ({ ...o, email: "This email is already registered" }));
      //     return;
      //   }
      //   if (res.status === 422) {
      //     const { errors } = await res.json().catch(() => ({}));
      //     if (errors && typeof errors === "object") {
      //       setErr((o) => ({
      //         ...o,
      //         fullName: errors.fullName || o.fullName,
      //         mobile: errors.mobile || o.mobile,
      //         email: errors.email || o.email,
      //         password: errors.password || o.password,
      //         age: errors.targetAge || o.age,
      //         submit: errors._ || o.submit,
      //       }));
      //       return;
      //     }
      //   }
      //   const msg = await res.text().catch(() => "");
      //   setErr((o) => ({ ...o, submit: msg || "Sign up failed. Please try again." }));
      //   return;
      // }
      //
      // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: backend ‡∏Ñ‡∏ß‡∏£ "‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô" ‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      //
      // =======================
      // üîÅ MOCK ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≠ backend (‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ API ‡∏à‡∏£‡∏¥‡∏á):
      await new Promise((r) => setTimeout(r, 800));
      clearTimeout(timeoutId);

      // ‚úÖ Flow Verify Email:
      // - ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏µ‡πÄ‡∏°‡∏• (banner)
      // - "‡πÑ‡∏°‡πà" redirect ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ (‡∏£‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå verify ‡πÉ‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•)
      setSuccessEmail(email.trim());
      setBannerOpen(true);
    } catch (err0) {
      if (err0?.name === "AbortError") {
        setErr((o) => ({ ...o, submit: "Request timed out. Please try again." }));
      } else {
        setErr((o) => ({ ...o, submit: "Sign up failed. Please try again." }));
      }
    } finally {
      clearTimeout(timeoutId);
      setSubmitting(false);
    }
  };

  // -----------------------------
  // (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å) ‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå redirect ‡∏à‡∏≤‡∏Å query ‡πÄ‡∏ä‡πà‡∏ô ?next=/checkout
  //   - ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ö‡∏≤‡∏á flow ‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≥ route ‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô
  // -----------------------------
  const [searchParams] = useSearchParams();
  const nextPath = useMemo(() => searchParams.get("next") || "", [searchParams]);

  return (
    <div className="min-h-[calc(100vh-8rem)] bg-[color:var(--background)] text-[color:var(--foreground)] flex items-start md:items-center justify-center px-4 py-8">
      <div className="w-full max-w-md">

        {/* ‚úÖ Banner: ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô */}
        {bannerOpen && (
          <div className="mb-4 rounded-md border border-[color:var(--border)] bg-[color:var(--popover)] text-[color:var(--popover-foreground)] px-4 py-3 shadow-sm">
            <div className="font-semibold">Account created</div>
            <p className="text-sm mt-1">
              We‚Äôve sent a verification link to <strong>{successEmail}</strong>.
            </p>
            <p className="text-sm">Please check your inbox (and spam) to verify your email.</p>
            <p className="text-sm">
              After verification, you will be redirected to the Sign In page.
            </p>
            {/* TODO: (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£) ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏´‡∏°‡πà */}
            {/* <button className="mt-2 text-sm underline hover:opacity-80">Resend verification email</button> */}
            <button
              type="button"
              className="mt-2 text-sm underline hover:opacity-80"
              onClick={() => setBannerOpen(false)}
            >
              Dismiss
            </button>
          </div>
        )}

        {/* üî≤ ‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° */}
        <div className="border border-[color:var(--border)] rounded-[var(--radius)] bg-[color:var(--card)] shadow-sm">
          <form onSubmit={handleSubmit} className="p-6 md:p-8" noValidate>
            <h1 className="text-2xl md:text-3xl font-bold text-center mb-6">Create an account</h1>

            {/* ---------------- Full Name ---------------- */}
            <label htmlFor="fullName" className="block text-sm font-medium mb-2">First Name / Last Name</label>
            <input
              id="fullName"
              name="name"
              type="text"
              autoComplete="name"
              placeholder="e.g. Jane Doe"
              value={fullName}
              onChange={(e) => setFullName(e.target.value)}
              aria-invalid={!!err.fullName}
              className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
                         text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
                         focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
              required
            />
            {err.fullName && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.fullName}</p>}

            {/* ---------------- Mobile Number ---------------- */}
            <label htmlFor="mobile" className="block text-sm font-medium mt-5 mb-2">Mobile number</label>
            <input
              id="mobile"
              name="tel"
              type="tel"
              autoComplete="tel"
              placeholder="e.g. +66 8x-xxx-xxxx"
              value={mobile}
              onChange={(e) => setMobile(e.target.value)}
              aria-invalid={!!err.mobile}
              className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
                         text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
                         focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
              required
            />
            {err.mobile && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.mobile}</p>}

            {/* ---------------- Email Address ---------------- */}
            <label htmlFor="email" className="block text-sm font-medium mt-5 mb-2">Email address</label>
            <input
              id="email"
              name="email"
              type="email"
              autoComplete="email"
              placeholder="e.g. name@example.com"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              aria-invalid={!!err.email}
              className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
                         text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
                         focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
              required
            />
            {err.email && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.email}</p>}

            {/* ---------------- Password ---------------- */}
            <label htmlFor="password" className="block text-sm font-medium mt-5 mb-2">Password</label>
            <div className="relative">
              <input
                id="password"
                name="new-password"
                type={showPw ? "text" : "password"}
                autoComplete="new-password"
                placeholder="Enter your password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                minLength={6}
                aria-invalid={!!err.password}
                className="w-full h-11 pr-12 px-4 rounded-md border border-[color:var(--input)] bg-white
                           text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
                           focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
                required
              />
              <button
                type="button"
                className="absolute inset-y-0 right-2 my-auto text-sm px-2 rounded hover:opacity-80"
                onClick={() => setShowPw((s) => !s)}
                aria-label={showPw ? "Hide password" : "Show password"}
              >
                {showPw ? "Hide" : "Show"}
              </button>
            </div>
            {err.password && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.password}</p>}

            {/* ---------------- Target Groups (Age range 1‚Äì20) ---------------- */}
            <label className="block text-sm font-medium mt-5 mb-2">Target Groups (Age range)</label>
            <div className="flex items-center gap-2">
              <input
                id="ageFrom"
                name="age-from"
                type="number"
                inputMode="numeric"
                min={1}
                max={20}
                step={1}
                placeholder="From"
                value={ageFrom}
                onChange={(e) => setAgeFrom(e.target.value)}
                aria-invalid={!!err.age}
                className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
                           text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
                           focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
                required
              />
              <span className="text-[color:var(--muted-foreground)]">‚Äì</span>
              <input
                id="ageTo"
                name="age-to"
                type="number"
                inputMode="numeric"
                min={1}
                max={20}
                step={1}
                placeholder="To"
                value={ageTo}
                onChange={(e) => setAgeTo(e.target.value)}
                aria-invalid={!!err.age}
                className="w-full h-11 px-4 rounded-md border border-[color:var(--input)] bg-white
                           text-[color:var(--foreground)] placeholder:text-[color:var(--muted-foreground)]
                           focus:outline-none focus:ring-2 focus:ring-[color:var(--ring)] focus:border-[color:var(--ring)]"
                required
              />
            </div>
            {err.age && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.age}</p>}
            <p className="mt-1 text-xs text-[color:var(--muted-foreground)]">Allowed age range: 1‚Äì20 years old.</p>

            {/* ---------------- Agree to Policy / Terms ---------------- */}
            <div className="mt-5 flex items-start gap-2">
              <input
                id="agree"
                type="checkbox"
                checked={agree}
                onChange={onAgreeToggle}  // ‚¨ÖÔ∏è ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°: ‡πÄ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏ï‡∏¥‡πä‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
                aria-invalid={!!err.agree}
                className="mt-1"
                required
              />
              <label htmlFor="agree" className="text-sm">
                I agree to the{" "}
                <button type="button" className="underline hover:opacity-80" onClick={() => setShowPolicy(true)}>
                  Privacy Policy
                </button>{" "}
                and{" "}
                <button type="button" className="underline hover:opacity-80" onClick={() => setShowPolicy(true)}>
                  Terms of Service
                </button>
                .
              </label>
            </div>
            {err.agree && <p className="mt-1 text-sm text-[color:var(--destructive)]" role="alert">{err.agree}</p>}

            {/* (‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ flow ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤) */}
            <p className="mt-3 text-xs text-[color:var(--muted-foreground)]">
              After creating an account, we will send a verification link to your email. Please verify before signing in.
            </p>

            {/* ---------------- Submit Button ---------------- */}
            <button
              type="submit"
              disabled={submitting}
              className="mt-6 w-full h-11 rounded-md font-semibold
                         bg-[color:var(--primary)] text-[color:var(--primary-foreground)]
                         hover:opacity-90 disabled:opacity-60
                         focus:outline-none focus-visible:ring-2
                         focus-visible:ring-[color:var(--ring)] focus-visible:ring-offset-2"
            >
              {submitting ? "Creating..." : "Create Account"}
            </button>

            {/* Footer link */}
            <div className="mt-5 text-center text-sm">
              Already have an account?{" "}
              <Link to="/signin" className="underline hover:opacity-90">Login</Link>
            </div>

            {/* Error ‡∏£‡∏∞‡∏î‡∏±‡∏ö submit */}
            {err.submit && (
              <p className="mt-3 text-sm text-[color:var(--destructive)] text-center" role="alert">
                {err.submit}
              </p>
            )}
          </form>
        </div>

        {/* =================== MODAL (‡∏≠‡πà‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢) =================== */}
        {showPolicy && (
          <div
            className="fixed inset-0 z-[999] flex items-center justify-center px-4"
            role="dialog"
            aria-modal="true"
            aria-labelledby="policy-title"
            onClick={(e) => {
              // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏â‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î
              if (e.target === e.currentTarget) setShowPolicy(false);
            }}
          >
            {/* ‡∏â‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏°‡∏∑‡∏î‡∏ö‡∏≤‡∏á ‡πÜ */}
            <div className="absolute inset-0 bg-black/40" />

            {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡πÇ‡∏ó‡∏ô popover ‡∏ï‡∏≤‡∏°‡∏ò‡∏µ‡∏°) */}
            <div className="relative w-full max-w-3xl max-h-[85vh] overflow-hidden rounded-[var(--radius)] border border-[color:var(--border)] bg-[color:var(--popover)] text-[color:var(--popover-foreground)] shadow-lg">
              {/* Header */}
              <div className="px-5 py-4 border-b border-[color:var(--border)] flex items-center justify-between">
                <h2 id="policy-title" className="text-lg font-semibold">Privacy Policy & Terms of Service</h2>
                <button type="button" className="text-sm underline hover:opacity-80" onClick={() => setShowPolicy(false)} aria-label="Close">
                  Close
                </button>
              </div>

              {/* Scrollable content */}
              <div className="px-5 py-4 overflow-y-auto max-h-[65vh] text-sm leading-6">
                <p className="mb-3">
                  We value your privacy and security. By creating an account and using our services, you agree to the following policy and terms.
                </p>

                <h3 className="font-semibold mt-4 mb-2">Privacy Policy</h3>
                <ul className="list-disc pl-5 space-y-2">
                  <li>
                    We collect and use your personal information (e.g., name, contact details, shipping address, and payment info) to process orders, deliver products, prevent fraud, and improve your shopping experience.
                  </li>
                  <li>
                    Your data is stored securely and is never sold. We may share it with trusted third-party providers only when necessary for payment processing, delivery, analytics, or customer support‚Äîsubject to appropriate safeguards.
                  </li>
                  <li>
                    You may contact us to access, update, or request deletion of your personal data, subject to legal and operational requirements.
                  </li>
                </ul>

                <h3 className="font-semibold mt-5 mb-2">Terms of Service</h3>
                <ul className="list-disc pl-5 space-y-2">
                  <li>
                    You agree to use the service lawfully and respectfully. Product availability, pricing, taxes, shipping fees, and delivery estimates are shown at checkout.
                  </li>
                  <li>
                    Returns and refunds follow our return policy. We are not liable for indirect or consequential losses caused by delays, outages, or events beyond our control.
                  </li>
                  <li>
                    By creating an account, you confirm that you are authorized to use the provided payment method and that all information is accurate and up to date.
                  </li>
                </ul>

                <p className="mt-5">
                  By selecting <strong>I agree</strong> on the sign-up form and creating an account, you acknowledge that you have read and accepted this Privacy Policy and these Terms of Service.
                </p>
              </div>

              {/* Footer */}
              <div className="px-5 py-3 border-t border-[color:var(--border)] flex items-center justify-end gap-3">
                <button
                  type="button"
                  className="px-4 h-9 rounded-md border border-[color:var(--input)] hover:opacity-90"
                  onClick={() => setShowPolicy(false)}
                >
                  Close
                </button>
                <button
                  type="button"
                  className="px-4 h-9 rounded-md font-semibold bg-[color:var(--primary)] text-[color:var(--primary-foreground)] hover:opacity-90"
                  onClick={confirmAgreeFromModal} // ‚¨ÖÔ∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÉ‡∏ô modal ‚Üí auto-check ‡∏Å‡∏•‡πà‡∏≠‡∏á
                >
                  I Agree
                </button>
              </div>
            </div>
          </div>
        )}
        {/* =================== /MODAL =================== */}
      </div>
    </div>
  );
}
